import pytest

from solution.task_4 import pipeline


@pytest.mark.parametrize(
    "input_stages,input_details,expected",
    [
        ([1], [0], [1]),
        ([10], [0], [10]),
        ([6], [7], [13]),
        ([4], [12], [16]),
        ([3, 8], [1, 4], [12, 20]),
        ([3, 8], [4, 1], [20, 12]),
        ([3, 8], [7, 3], [22, 14]),
        ([3, 8], [3, 7], [14, 22]),
        ([11, 6], [5, 7], [22, 33]),
        ([11, 6], [7, 5], [33, 22]),
        ([2, 8, 12], [3, 5, 7], [25, 37, 49]),
        ([2, 8, 12], [7, 5, 3], [49, 37, 25]),
        ([17, 10, 7], [2, 8, 4], [36, 70, 53]),
        ([17, 10, 7], [2, 4, 8], [36, 53, 70]),
        ([2, 3, 5], [2, 8, 4], [12, 22, 17]),
        ([2, 3, 5], [8, 2, 4], [22, 12, 17]),
        ([3, 7, 2], [0, 4, 12], [12, 19, 26]),
        ([5, 3, 7, 4], [3, 5, 1, 18], [27, 34, 20, 41]),
        ([4, 1, 6, 10], [7, 5], [36, 26]),
        ([7, 10, 3, 5], [9, 12], [34, 44]),
        ([12, 6, 9, 11], [3, 7, 5], [41, 65, 53]),
        ([12, 6, 9, 11], [3, 16, 30], [41, 54, 68]),
    ],
)
def test_pipeline(input_stages, input_details, expected):
    assert pipeline(input_stages, input_details) == expected
